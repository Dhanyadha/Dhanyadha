import java.util.ArrayList;
import java.util.Scanner;

class Patient {
    private int id;
    private String name;
    private int age;
    private String gender;

    public Patient(int id, String name, int age, String gender) {
        this.id = id;
        this.name = name;
        this.age = age;
        this.gender = gender;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }

    public String getGender() {
        return gender;
    }

    public void displayInfo() {
        System.out.println("Patient ID: " + id);
        System.out.println("Name: " + name);
        System.out.println("Age: " + age);
        System.out.println("Gender: " + gender);
    }
}

class Doctor {
    private int id;
    private String name;
    private String specialty;

    public Doctor(int id, String name, String specialty) {
        this.id = id;
        this.name = name;
        this.specialty = specialty;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public String getSpecialty() {
        return specialty;
    }

    public void displayInfo() {
        System.out.println("Doctor ID: " + id);
        System.out.println("Name: " + name);
        System.out.println("Specialty: " + specialty);
    }
}

class Appointment {
    private int appointmentId;
    private Patient patient;
    private Doctor doctor;
    private String date;

    public Appointment(int appointmentId, Patient patient, Doctor doctor, String date) {
        this.appointmentId = appointmentId;
        this.patient = patient;
        this.doctor = doctor;
        this.date = date;
    }

    public void displayAppointmentDetails() {
        System.out.println("Appointment ID: " + appointmentId);
        System.out.println("Patient: " + patient.getName());
        System.out.println("Doctor: " + doctor.getName());
        System.out.println("Date: " + date);
    }
}

public class HospitalManagementSystem {

    private static ArrayList<Patient> patients = new ArrayList<>();
    private static ArrayList<Doctor> doctors = new ArrayList<>();
    private static ArrayList<Appointment> appointments = new ArrayList<>();

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        boolean exit = false;

        while (!exit) {
            System.out.println("\n--- Hospital Management System ---");
            System.out.println("1. Register Patient");
            System.out.println("2. Register Doctor");
            System.out.println("3. Schedule Appointment");
            System.out.println("4. View Patient Information");
            System.out.println("5. View Appointment Details");
            System.out.println("6. Exit");
            System.out.print("Choose an option: ");

            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    registerPatient(scanner);
                    break;
                case 2:
                    registerDoctor(scanner);
                    break;
                case 3:
                    scheduleAppointment(scanner);
                    break;
                case 4:
                    viewPatientInfo(scanner);
                    break;
                case 5:
                    viewAppointmentDetails(scanner);
                    break;
                case 6:
                    exit = true;
                    System.out.println("Exiting the system...");
                    break;
                default:
                    System.out.println("Invalid option. Please choose again.");
            }
        }

        scanner.close();
    }

    // Register a new patient
    public static void registerPatient(Scanner scanner) {
        System.out.print("Enter patient ID: ");
        int id = scanner.nextInt();
        System.out.print("Enter patient name: ");
        scanner.nextLine(); // consume the newline
        String name = scanner.nextLine();
        System.out.print("Enter patient age: ");
        int age = scanner.nextInt();
        System.out.print("Enter patient gender: ");
        scanner.nextLine(); // consume the newline
        String gender = scanner.nextLine();

        Patient newPatient = new Patient(id, name, age, gender);
        patients.add(newPatient);
        System.out.println("Patient registered successfully.");
    }

    // Register a new doctor
    public static void registerDoctor(Scanner scanner) {
        System.out.print("Enter doctor ID: ");
        int id = scanner.nextInt();
        System.out.print("Enter doctor name: ");
        scanner.nextLine(); // consume the newline
        String name = scanner.nextLine();
        System.out.print("Enter doctor's specialty: ");
        String specialty = scanner.nextLine();

        Doctor newDoctor = new Doctor(id, name, specialty);
        doctors.add(newDoctor);
        System.out.println("Doctor registered successfully.");
    }

    // Schedule an appointment
    public static void scheduleAppointment(Scanner scanner) {
        System.out.print("Enter appointment ID: ");
        int appointmentId = scanner.nextInt();
        System.out.print("Enter patient ID: ");
        int patientId = scanner.nextInt();
        System.out.print("Enter doctor ID: ");
        int doctorId = scanner.nextInt();
        System.out.print("Enter appointment date (YYYY-MM-DD): ");
        scanner.nextLine(); // consume the newline
        String date = scanner.nextLine();

        Patient patient = findPatientById(patientId);
        Doctor doctor = findDoctorById(doctorId);

        if (patient != null && doctor != null) {
            Appointment newAppointment = new Appointment(appointmentId, patient, doctor, date);
            appointments.add(newAppointment);
            System.out.println("Appointment scheduled successfully.");
        } else {
            System.out.println("Invalid patient or doctor ID.");
        }
    }

    // View patient information
    public static void viewPatientInfo(Scanner scanner) {
        System.out.print("Enter patient ID: ");
        int id = scanner.nextInt();

        Patient patient = findPatientById(id);

        if (patient != null) {
            patient.displayInfo();
        } else {
            System.out.println("Patient not found.");
        }
    }

    // View appointment details
    public static void viewAppointmentDetails(Scanner scanner) {
        System.out.print("Enter appointment ID: ");
        int id = scanner.nextInt();

        Appointment appointment = findAppointmentById(id);

        if (appointment != null) {
            appointment.displayAppointmentDetails();
        } else {
            System.out.println("Appointment not found.");
        }
    }

    // Helper method to find a patient by ID
    public static Patient findPatientById(int id) {
        for (Patient patient : patients) {
            if (patient.getId() == id) {
                return patient;
            }
        }
        return null;
    }

    // Helper method to find a doctor by ID
    public static Doctor findDoctorById(int id) {
        for (Doctor doctor : doctors) {
            if (doctor.getId() == id) {
                return doctor;
            }
        }
        return null;
    }

    // Helper method to find an appointment by ID
    public static Appointment findAppointmentById(int id) {
        for (Appointment appointment : appointments) {
            if (appointment.getAppointmentId == id) {
                return appointment;
            }
        }
        return null;
    }
}
